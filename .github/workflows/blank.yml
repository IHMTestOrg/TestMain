# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Spam
        run: echo test > test.txt

      # Metadata
      - name: Get Time ID
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Get Time Header
        id: time-header
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD HH:mm:ss'
      - name: Get SHA
        id: sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TEST }}
        with:
          tag_name: abcdefg
          release_name: |
            Build #${{ steps.sha.outputs.sha_short }}
          body: |
            **Commits**: https://github.com/IHMTestOrg/TestMain/compare/${{github.event.before}}...${{github.event.after}}
            **Build date**: ${{ steps.time-header.outputs.time }}
          draft: false
          prerelease: true
          owner: IHMTestOrg
          repo: TestMain
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TEST }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: test.txt
          asset_name: tswow-${{steps.sha.outputs.sha_short}}.7z
          asset_content_type: text/plain
